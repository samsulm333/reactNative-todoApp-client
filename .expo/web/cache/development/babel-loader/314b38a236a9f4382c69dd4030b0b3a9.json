{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Task from \"../components/Task\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      task = _useState2[0],\n      setTask = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      taskItems = _useState4[0],\n      setTaskItems = _useState4[1];\n\n  var handleAddTask = function handleAddTask(e) {\n    var config, body, response;\n    return _regeneratorRuntime.async(function handleAddTask$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            e.preventDefault();\n            config = {\n              headers: {\n                \"Content-type\": \"application/json\"\n              }\n            };\n            body = {\n              title: task\n            };\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(axios.post(\"http://10.0.2.2:5003/api/v1/add-todo\", body, config));\n\n          case 6:\n            response = _context.sent;\n            console.log(response);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 13:\n            Keyboard.dismiss();\n            setTask(null);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(TouchableOpacity, {\n      style: styles.buttonNavigation,\n      onPress: function onPress() {\n        return navigation.navigate(\"Complete Task\");\n      },\n      children: _jsx(View, {\n        children: _jsx(Text, {\n          style: styles.navigationText,\n          children: \"Go to Complete Task\"\n        })\n      })\n    }), _jsx(View, {\n      style: styles.taskContainer,\n      children: taskItems.map(function (item, index) {\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return completeTask(index);\n          },\n          children: _jsx(Task, {\n            text: item\n          })\n        }, index);\n      })\n    }), _jsxs(View, {\n      behaviour: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n      style: styles.writeTaskWrapper,\n      children: [_jsx(TextInput, {\n        style: styles.textInput,\n        value: task,\n        style: styles.textInput,\n        onChangeText: function onChangeText(text) {\n          return setTask(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return handleAddTask();\n        },\n        children: _jsx(View, {\n          style: styles.addWrapper,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"+\"\n          })\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  buttonNavigation: {\n    height: \"8%\",\n    width: \"95%\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"blue\",\n    borderRadius: 10,\n    marginVertical: 5\n  },\n  navigationText: {\n    color: \"white\",\n    fontSize: 15,\n    fontWeight: \"700\"\n  },\n  taskContainer: {\n    height: \"65%\",\n    paddingTop: 20,\n    paddingHorizontal: 20\n  },\n  writeTaskWrapper: {\n    height: \"25%\",\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    paddingHorizontal: 20\n  },\n  textInput: {\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    backgroundColor: \"white\",\n    borderRadius: 60,\n    borderColor: \"#c0c0c0\",\n    borderWidth: 1,\n    width: 250\n  },\n  addWrapper: {\n    width: 60,\n    height: 60,\n    backgroundColor: \"white\",\n    borderRadius: 60,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderColor: \"#c0c0c0\",\n    borderWidth: 1\n  },\n  buttonText: {\n    fontSize: 30,\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["F:/dumbways/bootcamp/project/taskweek3/todolist-client-fix/src/screens/HomeScreen.js"],"names":["React","useState","axios","Task","HomeScreen","navigation","task","setTask","taskItems","setTaskItems","handleAddTask","e","preventDefault","config","headers","body","title","post","response","console","log","Keyboard","dismiss","styles","buttonNavigation","navigate","navigationText","taskContainer","map","item","index","completeTask","Platform","OS","writeTaskWrapper","textInput","text","addWrapper","buttonText","StyleSheet","create","height","width","alignItems","alignSelf","justifyContent","backgroundColor","borderRadius","marginVertical","color","fontSize","fontWeight","paddingTop","paddingHorizontal","flexDirection","paddingVertical","borderColor","borderWidth"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;;AAUA,OAAOC,IAAP;;;AAEA,eAAe,SAASC,UAAT,OAAoC;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AACjD,kBAAwBJ,QAAQ,EAAhC;AAAA;AAAA,MAAOK,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAkCN,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOO,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAElBA,YAAAA,CAAC,CAACC,cAAF;AACMC,YAAAA,MAHY,GAGH;AACbC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT;AADI,aAHG;AAQZC,YAAAA,IARY,GAQL;AACXC,cAAAA,KAAK,EAAEV;AADI,aARK;AAAA;AAAA,6CAYKJ,KAAK,CAACe,IAAN,CACrB,sCADqB,EAErBF,IAFqB,EAGrBF,MAHqB,CAZL;;AAAA;AAYZK,YAAAA,QAZY;AAiBlBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAjBkB;AAAA;;AAAA;AAAA;AAAA;AAmBlBC,YAAAA,OAAO,CAACC,GAAR;;AAnBkB;AAqBpBC,YAAAA,QAAQ,CAACC,OAAT;AAEAf,YAAAA,OAAO,CAAC,IAAD,CAAP;;AAvBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AA0BA,SACE,MAAC,IAAD;AAAA,eACE,KAAC,gBAAD;AACE,MAAA,KAAK,EAAEgB,MAAM,CAACC,gBADhB;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMnB,UAAU,CAACoB,QAAX,CAAoB,eAApB,CAAN;AAAA,OAFX;AAAA,gBAIE,KAAC,IAAD;AAAA,kBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEF,MAAM,CAACG,cAApB;AAAA;AAAA;AADF;AAJF,MADF,EAUE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACI,aAApB;AAAA,gBACGnB,SAAS,CAACoB,GAAV,CAAc,UAACC,IAAD,EAAOC,KAAP;AAAA,eACb,KAAC,gBAAD;AAAkB,UAAA,OAAO,EAAE;AAAA,mBAAMC,YAAY,CAACD,KAAD,CAAlB;AAAA,WAA3B;AAAA,oBACE,KAAC,IAAD;AAAM,YAAA,IAAI,EAAED;AAAZ;AADF,WAA2DC,KAA3D,CADa;AAAA,OAAd;AADH,MAVF,EAkBE,MAAC,IAAD;AACE,MAAA,SAAS,EAAEE,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,SAAxB,GAAoC,QADjD;AAEE,MAAA,KAAK,EAAEV,MAAM,CAACW,gBAFhB;AAAA,iBAIE,KAAC,SAAD;AACE,QAAA,KAAK,EAAEX,MAAM,CAACY,SADhB;AAEE,QAAA,KAAK,EAAE7B,IAFT;AAGE,QAAA,KAAK,EAAEiB,MAAM,CAACY,SAHhB;AAIE,QAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,iBAAU7B,OAAO,CAAC6B,IAAD,CAAjB;AAAA;AAJhB,QAJF,EAWE,KAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAM1B,aAAa,EAAnB;AAAA,SAA3B;AAAA,kBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEa,MAAM,CAACc,UAApB;AAAA,oBACE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEd,MAAM,CAACe,UAApB;AAAA;AAAA;AADF;AADF,QAXF;AAAA,MAlBF;AAAA,IADF;AAsCD;AAED,IAAMf,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB;AAC/BhB,EAAAA,gBAAgB,EAAE;AAChBiB,IAAAA,MAAM,EAAE,IADQ;AAEhBC,IAAAA,KAAK,EAAE,KAFS;AAGhBC,IAAAA,UAAU,EAAE,QAHI;AAIhBC,IAAAA,SAAS,EAAE,QAJK;AAKhBC,IAAAA,cAAc,EAAE,QALA;AAMhBC,IAAAA,eAAe,EAAE,MAND;AAOhBC,IAAAA,YAAY,EAAE,EAPE;AAQhBC,IAAAA,cAAc,EAAE;AARA,GADa;AAW/BtB,EAAAA,cAAc,EAAE;AACduB,IAAAA,KAAK,EAAE,OADO;AAEdC,IAAAA,QAAQ,EAAE,EAFI;AAGdC,IAAAA,UAAU,EAAE;AAHE,GAXe;AAgB/BxB,EAAAA,aAAa,EAAE;AACbc,IAAAA,MAAM,EAAE,KADK;AAEbW,IAAAA,UAAU,EAAE,EAFC;AAGbC,IAAAA,iBAAiB,EAAE;AAHN,GAhBgB;AAsB/BnB,EAAAA,gBAAgB,EAAE;AAChBO,IAAAA,MAAM,EAAE,KADQ;AAEhBC,IAAAA,KAAK,EAAE,MAFS;AAGhBY,IAAAA,aAAa,EAAE,KAHC;AAIhBT,IAAAA,cAAc,EAAE,cAJA;AAKhBF,IAAAA,UAAU,EAAE,QALI;AAMhBU,IAAAA,iBAAiB,EAAE;AANH,GAtBa;AA8B/BlB,EAAAA,SAAS,EAAE;AACToB,IAAAA,eAAe,EAAE,EADR;AAETF,IAAAA,iBAAiB,EAAE,EAFV;AAGTP,IAAAA,eAAe,EAAE,OAHR;AAITC,IAAAA,YAAY,EAAE,EAJL;AAKTS,IAAAA,WAAW,EAAE,SALJ;AAMTC,IAAAA,WAAW,EAAE,CANJ;AAOTf,IAAAA,KAAK,EAAE;AAPE,GA9BoB;AAuC/BL,EAAAA,UAAU,EAAE;AACVK,IAAAA,KAAK,EAAE,EADG;AAEVD,IAAAA,MAAM,EAAE,EAFE;AAGVK,IAAAA,eAAe,EAAE,OAHP;AAIVC,IAAAA,YAAY,EAAE,EAJJ;AAKVF,IAAAA,cAAc,EAAE,QALN;AAMVF,IAAAA,UAAU,EAAE,QANF;AAOVa,IAAAA,WAAW,EAAE,SAPH;AAQVC,IAAAA,WAAW,EAAE;AARH,GAvCmB;AAiD/BnB,EAAAA,UAAU,EAAE;AACVY,IAAAA,QAAQ,EAAE,EADA;AAEVL,IAAAA,cAAc,EAAE;AAFN;AAjDmB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  Keyboard,\r\n} from \"react-native\";\r\n\r\nimport Task from \"../components/Task\";\r\n\r\nexport default function HomeScreen({ navigation }) {\r\n  const [task, setTask] = useState();\r\n  const [taskItems, setTaskItems] = useState([]);\r\n\r\n  const handleAddTask = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const body = {\r\n        title: task,\r\n      };\r\n\r\n      const response = await axios.post(\r\n        \"http://10.0.2.2:5003/api/v1/add-todo\",\r\n        body,\r\n        config\r\n      );\r\n      console.log(response);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    Keyboard.dismiss();\r\n    // setTaskItems([...taskItems, task]);\r\n    setTask(null);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <TouchableOpacity\r\n        style={styles.buttonNavigation}\r\n        onPress={() => navigation.navigate(\"Complete Task\")}\r\n      >\r\n        <View>\r\n          <Text style={styles.navigationText}>Go to Complete Task</Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n\r\n      <View style={styles.taskContainer}>\r\n        {taskItems.map((item, index) => (\r\n          <TouchableOpacity onPress={() => completeTask(index)} key={index}>\r\n            <Task text={item} />\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n\r\n      <View\r\n        behaviour={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n        style={styles.writeTaskWrapper}\r\n      >\r\n        <TextInput\r\n          style={styles.textInput}\r\n          value={task}\r\n          style={styles.textInput}\r\n          onChangeText={(text) => setTask(text)}\r\n        />\r\n\r\n        <TouchableOpacity onPress={() => handleAddTask()}>\r\n          <View style={styles.addWrapper}>\r\n            <Text style={styles.buttonText}>+</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonNavigation: {\r\n    height: \"8%\",\r\n    width: \"95%\",\r\n    alignItems: \"center\",\r\n    alignSelf: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"blue\",\r\n    borderRadius: 10,\r\n    marginVertical: 5,\r\n  },\r\n  navigationText: {\r\n    color: \"white\",\r\n    fontSize: 15,\r\n    fontWeight: \"700\",\r\n  },\r\n  taskContainer: {\r\n    height: \"65%\",\r\n    paddingTop: 20,\r\n    paddingHorizontal: 20,\r\n  },\r\n\r\n  writeTaskWrapper: {\r\n    height: \"25%\",\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 20,\r\n  },\r\n  textInput: {\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 60,\r\n    borderColor: \"#c0c0c0\",\r\n    borderWidth: 1,\r\n    width: 250,\r\n  },\r\n  addWrapper: {\r\n    width: 60,\r\n    height: 60,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 60,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderColor: \"#c0c0c0\",\r\n    borderWidth: 1,\r\n  },\r\n  buttonText: {\r\n    fontSize: 30,\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}